# Modelling {#a-reg-a .unnumbered}

## In this chapter

<!-- to revamp as not really described here -->

This chapter gives an overview of modelling algorithms available in JDemetra+.

Modelling features can be used stand alone or as [pre-treatment](#sa-pre-t) (first step of [seasonal adjustment](#sa-overview)).

Details on modelling (specifications and output characteristics) are provided in the [pre-treatment chapter](#sa-pre-t) as they relate to the same procedure. High-Frequency (infra-monthly) data is tackled [here](#a-sa-hf).

Additional methodological explanations are covered in [this chapter](#m-reg-a) and in [this one](#m-sa-hf) for high-frequency data.

## Modelling Algorithms

| Algorithm        | Access in GUI | Access in R (v2)    | Access in R (v3) |
|------------------|---------------|---------------------|------------------|
| Reg-Arima        | ✔️            | RJDemetra           | rjd3x13          |
| Tramo            | ✔️            | RJDemetra           | rjd3tramoseats   |
| Extended Airline | ✔️ (v3 only)  | ✖                   | rjd3highfreq     |
| STS              | ✔️ (v3 only)  | rjdsts (deprecated) | rjd3sts          |

Steps to use Reg-Arima and Tramo in a pre-treatment context are described [here](#sa-pre-t).

The possibility of saving parameters and generating output in the GUI is different when using modelling methods directly or seasonal adjustment process as explained [here](#t-gui-sa).

[Extended Airline Model](#a-sa-hf) allows to handle infra-monthly series in a restricted reg-Arima framework, more details [here](#a-sa-hf).

[Structural time series (STS)](#a-sa-bsm) allow another kind of modelling using state space framework, more details [here](#a-sa-bsm).

## Practical Reg-Arima modelling

For the user not needing seasonal adjustment, the sections below highlight the functions or steps allowing to perform reg-Arima (or Tramo) as a stand alone goal, outside of a seasonal adjustment process.

### In R

In version 2

```{r, echo = TRUE, eval = FALSE}
library("RJDemetra")
# Reg-Arima
regA_v2 <- RJDemetra::regarima_x13(raw_series, spec = "RG5c")
# Tramo
tramo_v2 <- RJDemetra::regarima_tramoseats(raw_series, spec = "TRfull")
```

Full documentation of 'RJDemetra::regarima' function can be found [here](https://jdemetra.github.io/rjdemetra/reference/regarima.html)

Full documentation of 'RJDemetra::regarima_tramoseats' function can be found [here](https://jdemetra.github.io/rjdemetra/reference/regarima.html)

In version 3

```{r,eval=FALSE, echo=TRUE}
# Reg-Arima
sa_regarima_v3 <- rjd3x13::regarima(raw_series, spec = "RG5c")

#Tramo
sa_tramo_v3 <- rjd3tramoseats::tramo(raw_series, spec = "TRfull")

```

Full documentation of 'rjd3x13::regarima' function can be found [here](https://rjdverse.github.io/rjd3x13/reference/regarima.html)

Full documentation of 'rjd3tramoseats::tramo' function can be found [here](https://rjdverse.github.io/rjd3tramoseats/reference/tramo.html)

### GUI

In the graphical user interface modelling algorithms can be accessed in two ways described below. In both cases a document (xml file) will be generated and can be save in the workspace. The output (series, parameters and diagnostics) cannot be exported as files, just directly copied from the interface. Further details on window structure in GUI are available [here](#t-gui-sa).

#### Modelling in the Workspace Window

![**The *Workspace* window with the nodes for the modelling procedure marked**](All_images/A_Ref_d1.jpg)

#### Modelling in Statistical Methods Panel

![**The *RegArima* menu item**](All_images/A_Ref53.jpg)
